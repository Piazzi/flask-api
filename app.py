from flask import Flask, abort
from flask_restx import Api, Resource, fields

app = Flask(__name__)
api = Api(app, version='1.0', title='Encode/Decode API',
    description='A simple custom Encode/Decode API',
)

BASE = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!@#$%*()|-_=+^/?"
 
@api.route("/encode/<int:number>", endpoint='encode')
@api.doc(params={'number': 'A positive integer number with less than 9 digits'})
class Encode(Resource):
    
    def get(self, number):
        num_length = len(str(number))
        if(num_length > 8):
            abort(400)
        return self.custom_encode(number)
   
    def custom_encode(self, n):
        """ Returns a 6 digit code for the given number (n) """    
        if n == 0: 
            return str(BASE[0]).zfill(6)
        base_length = len(BASE)
        digits = ''
        while n > 0:
            digits = BASE[n % base_length] + digits
            n = n // base_length
        return str(digits).zfill(6)
    
@api.route("/decode/<code>",  endpoint='decode')
@api.doc(params={'code': 'A 6 digit code generated by the /encode/<int:number> endpoint'})
class Decode(Resource):
    
    def get(self, code):
        if(len(str(code)) != 6):
            abort(400)
        return str(self.custom_decode(code)).zfill(6)

    def custom_decode(self, code):
            """ Decodes the given code into a number """    
            baseLength = len(BASE)
            n = 0
            for d in code:
                n = baseLength*n + BASE[:baseLength].index(d)
            return n
    
if __name__ == "__main__":
    app.run(debug=True) 