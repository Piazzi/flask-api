from flask import Flask, abort
from flask_restx import Api, Resource, fields

app = Flask(__name__)
api = Api(app, version='1.0', title='Encode/Decode API',
    description='A simple custom Encode/Decode API',
)

BASE = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!@#$%*()|-_=+^/?'
 
@api.route('/encode/<int:number>', endpoint='encode')
@api.response(400, 'Invalid number')
@api.response(200, 'Success')
@api.doc(params={'number': 'A positive integer number with less than 9 digits'})
class Encode(Resource):
    
    def get(self, number):
        if(len(str(number)) > 8):
            abort(400)
        if number == 0: 
            return str(BASE[0]).zfill(6)
        base_length = len(BASE)
        digits = ''
        while number > 0:
            digits = BASE[number % base_length] + digits
            number = number // base_length
        return str(digits).zfill(6)
    
@api.route('/decode/<code>',  endpoint='decode')
@api.response(400, 'Invalid code')
@api.response(200, 'Success')
@api.doc(params={'code': 'A 6 digit code generated by the /encode/<int:number> endpoint'})
class Decode(Resource):
    
    def get(self, code):
        if(len(str(code)) != 6):
            abort(400)
        baseLength = len(BASE)
        number = 0
        for digit in code:
            number = baseLength*number + BASE[:baseLength].index(digit)
        return str(number).zfill(6)
    
if __name__ == '__main__':
    app.run(debug=True) 